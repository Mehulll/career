{"ast":null,"code":"var _jsxFileName = \"/home/tb2/youtube/myprojects/careeroptions/career-master/src/components/Navbar.js\";\nimport React, { Component } from 'react'; // import Button from 'react-bootstrap/Button'\n\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport './Navbar.css';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar re = [];\nvar ok = false;\nvar why; // class Navs extends Component{\n//     constructor(props){\n//       super(props);\n//          this.state = {\n//             search : '',\n//             results:[]\n//           } \n//     }\n//   // componentDidMount = () => {\n//   //   this.getData();\n//   // };\n//   hangleGet = (event) => {\n//     const target = event.target;\n//     const search = target.name;\n//     const value = target.value;\n//     this.setState({\n//       [search] : value\n//     });\n//   };\n//   // componentDidMount = () => {\n//   //   this.getData();\n//   // };\n//   getData = (event) => {\n//     event.preventDefault();\n//     this.state.results=[]\n//     // console.log(payload);\n//     axios.get('/api/UserModel/search?name=' + this.state.search  )\n//       .then((response) => {\n//         const data = response.data;\n//         this.setState({results:data});\n//         console.log(\"data has been recieved\")\n//         // this.props.why=this.state.results;\n//         // re = this.state.results;\n//         // this.props.history.push('/results',this.state.results)\n//       })\n//       .catch(() => {\n//         alert(\"Data not received\")\n//       });\n//     // this.props.why=this.state.results\n//     // console.log(this.props.why)\n//   }\n//   // displayresults = (res) => {\n//   //   if (!res.length) return null\n//   //   // console.log(this.state.results)\n//   //   return res.map((result,index) => (\n//   //     <div key={index}>\n//   //       <p>\n//   //         {result.Name}\n//   //       </p>\n//   //     </div>\n//   //   ));\n//   // };\n//   putValue = (props) => {\n//     if(props.length > 0){\n//       for(var i = 0 ; i < props.length ; i++){\n//         re.push(props[i].Name);\n//       }\n//       props=[]\n//     }\n//     why = this.state.search;\n//     // return null;\n//   }\n//   reclear = () =>{\n//     re = []\n//   }\n//   render(){\n//     // console.log(this.state);\n//     return(\n//     <div>\n//     <Navbar bg=\"dark\" variant=\"dark\">\n//       <Navbar.Brand>Career</Navbar.Brand>\n//       <Nav className=\"mr-auto\">\n//           <Link className = \"link1\" to = \"/\">Home</Link>\n//           <Link className = \"link2\" to = \"/list\">List</Link>\n//           <Link className = \"link3\" to = \"/about\">About</Link>\n//           <Link className = \"link4\" to = \"/signup\">Signup</Link>\n//           <Link className = \"link5\" to = \"/login\">Login</Link>\n//       </Nav>\n//       <Form inline className = 'form1' onKeyUp={this.getData}>\n//         <FormControl name = \"search\" value = {this.state.title} onChange={this.hangleGet} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n//         {/* <Button variant=\"outline-info\" onChange={this.getData}>Search</Button> */}\n//       </Form>\n//       {/* {console.log(this.state.results)} */}\n//       {re.length===0 && this.putValue(this.state.results)}\n//       {/* {console.log(this.state.results)} */}\n//       {this.state.results.length>0 &&\n//         <Redirect to = {{\n//             pathname : '/results',\n//         }}/>\n//       }\n//       {/* {this.state.search='' && <Redirect to = '/'/>} */}\n//       {this.state.results=[]}\n//     </Navbar>\n//     </div>\n//     );\n//   };\n// }\n\nexport const Navs = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"dark\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        children: \"Career\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"mr-auto\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"link1\",\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link2\",\n          to: \"/list\",\n          children: \"List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link3\",\n          to: \"/about\",\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link4\",\n          to: \"/signup\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"link5\",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        inline: true,\n        className: \"form1\",\n        onKeyUp: this.getData,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          name: \"search\",\n          value: this.state.title,\n          onChange: this.hangleGet,\n          type: \"text\",\n          placeholder: \"Search\",\n          className: \"mr-sm-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 8\n      }, this), re.length === 0 && this.putValue(this.state.results), this.state.results.length > 0 && /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/results'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 10\n      }, this), this.state.results = []]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_c = Navs;\nexport function Results() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [re.map(Name => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${Name}`,\n          children: Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 27\n    }, this)), why.length == 0 && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/home'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }, this), re = [], ok = false]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Results;\nexport default connect(null)(Navs); // export {Navs,Results};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navs\");\n$RefreshReg$(_c2, \"Results\");","map":{"version":3,"sources":["/home/tb2/youtube/myprojects/careeroptions/career-master/src/components/Navbar.js"],"names":["React","Component","Nav","Navbar","Form","FormControl","Link","Redirect","axios","connect","re","ok","why","Navs","getData","state","title","hangleGet","length","putValue","results","pathname","Results","map","Name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAAQC,IAAR,EAAaC,QAAb,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxxB,sBACE;AAAA,2BACC,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,MAAX;AAAkB,MAAA,OAAO,EAAC,MAA1B;AAAA,8BACE,QAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAG,OAAlB;AAA0B,UAAA,EAAE,EAAG,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAG,OAAlB;AAA0B,UAAA,EAAE,EAAG,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAG,OAAlB;AAA0B,UAAA,EAAE,EAAG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,IAAD;AAAM,UAAA,SAAS,EAAG,OAAlB;AAA0B,UAAA,EAAE,EAAG,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAG,OAAlB;AAA0B,UAAA,EAAE,EAAG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,SAAS,EAAG,OAAzB;AAAiC,QAAA,OAAO,EAAE,KAAKC,OAA/C;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAG,QAApB;AAA6B,UAAA,KAAK,EAAI,KAAKC,KAAL,CAAWC,KAAjD;AAAwD,UAAA,QAAQ,EAAE,KAAKC,SAAvE;AAAkF,UAAA,IAAI,EAAC,MAAvF;AAA8F,UAAA,WAAW,EAAC,QAA1G;AAAmH,UAAA,SAAS,EAAC;AAA7H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,EAeGP,EAAE,CAACQ,MAAH,KAAY,CAAZ,IAAiB,KAAKC,QAAL,CAAc,KAAKJ,KAAL,CAAWK,OAAzB,CAfpB,EAiBG,KAAKL,KAAL,CAAWK,OAAX,CAAmBF,MAAnB,GAA0B,CAA1B,iBACC,QAAC,QAAD;AAAU,QAAA,EAAE,EAAI;AACZG,UAAAA,QAAQ,EAAG;AADC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAlBJ,EAuBG,KAAKN,KAAL,CAAWK,OAAX,GAAmB,EAvBtB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA9BM;KAAMP,I;AAkCb,OAAO,SAASS,OAAT,GAAkB;AACnB,sBACE;AAAA,eACGZ,EAAE,CAACa,GAAH,CAAOC,IAAI,iBAAI;AAAA,6BAAK;AAAA,+BAAI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAK,IAAGA,IAAK,EAArB;AAAA,oBAA0BA;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YAAf,CADH,EAEGZ,GAAG,CAACM,MAAJ,IAAc,CAAd,iBACG,QAAC,QAAD;AAAU,MAAA,EAAE,EAAI;AACdG,QAAAA,QAAQ,EAAG;AADG;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHN,EAOGX,EAAE,GAAC,EAPN,EAQGC,EAAE,GAAG,KARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYL;MAbeW,O;AAehB,eAAeb,OAAO,CAAC,IAAD,CAAP,CAAcI,IAAd,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react'\n// import Button from 'react-bootstrap/Button'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport {Link,Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport './Navbar.css' \nimport { connect } from 'react-redux'\n\nvar re = []\nvar ok = false;\nvar why;\n// class Navs extends Component{\n//     constructor(props){\n//       super(props);\n//          this.state = {\n//             search : '',\n//             results:[]\n//           } \n//     }\n//   // componentDidMount = () => {\n//   //   this.getData();\n//   // };\n\n//   hangleGet = (event) => {\n//     const target = event.target;\n//     const search = target.name;\n//     const value = target.value;\n\n//     this.setState({\n//       [search] : value\n//     });\n//   };\n\n//   // componentDidMount = () => {\n//   //   this.getData();\n//   // };\n\n//   getData = (event) => {\n//     event.preventDefault();\n//     this.state.results=[]\n//     // console.log(payload);\n//     axios.get('/api/UserModel/search?name=' + this.state.search  )\n//       .then((response) => {\n//         const data = response.data;\n//         this.setState({results:data});\n//         console.log(\"data has been recieved\")\n//         // this.props.why=this.state.results;\n//         // re = this.state.results;\n//         // this.props.history.push('/results',this.state.results)\n//       })\n//       .catch(() => {\n//         alert(\"Data not received\")\n//       });\n//     // this.props.why=this.state.results\n//     // console.log(this.props.why)\n//   }\n\n//   // displayresults = (res) => {\n//   //   if (!res.length) return null\n//   //   // console.log(this.state.results)\n//   //   return res.map((result,index) => (\n//   //     <div key={index}>\n//   //       <p>\n//   //         {result.Name}\n//   //       </p>\n//   //     </div>\n//   //   ));\n//   // };\n\n//   putValue = (props) => {\n    \n//     if(props.length > 0){\n//       for(var i = 0 ; i < props.length ; i++){\n//         re.push(props[i].Name);\n//       }\n//       props=[]\n//     }\n//     why = this.state.search;\n//     // return null;\n//   }\n \n//   reclear = () =>{\n//     re = []\n//   }\n//   render(){\n//     // console.log(this.state);\n//     return(\n//     <div>\n//     <Navbar bg=\"dark\" variant=\"dark\">\n//       <Navbar.Brand>Career</Navbar.Brand>\n//       <Nav className=\"mr-auto\">\n//           <Link className = \"link1\" to = \"/\">Home</Link>\n//           <Link className = \"link2\" to = \"/list\">List</Link>\n//           <Link className = \"link3\" to = \"/about\">About</Link>\n//           <Link className = \"link4\" to = \"/signup\">Signup</Link>\n//           <Link className = \"link5\" to = \"/login\">Login</Link>\n//       </Nav>\n//       <Form inline className = 'form1' onKeyUp={this.getData}>\n//         <FormControl name = \"search\" value = {this.state.title} onChange={this.hangleGet} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n//         {/* <Button variant=\"outline-info\" onChange={this.getData}>Search</Button> */}\n//       </Form>\n//       {/* {console.log(this.state.results)} */}\n\n//       {re.length===0 && this.putValue(this.state.results)}\n//       {/* {console.log(this.state.results)} */}\n//       {this.state.results.length>0 &&\n//         <Redirect to = {{\n//             pathname : '/results',\n//         }}/>\n//       }\n//       {/* {this.state.search='' && <Redirect to = '/'/>} */}\n//       {this.state.results=[]}\n//     </Navbar>\n//     </div>\n//     );\n//   };\n// }\n\nexport const Navs = () => {\n  return (\n    <div>\n     <Navbar bg=\"dark\" variant=\"dark\">\n       <Navbar.Brand>Career</Navbar.Brand>\n       <Nav className=\"mr-auto\">\n           <Link className = \"link1\" to = \"/\">Home</Link>\n           <Link className = \"link2\" to = \"/list\">List</Link>\n           <Link className = \"link3\" to = \"/about\">About</Link>\n           <Link className = \"link4\" to = \"/signup\">Signup</Link>\n           <Link className = \"link5\" to = \"/login\">Login</Link>\n       </Nav>\n       <Form inline className = 'form1' onKeyUp={this.getData}>\n         <FormControl name = \"search\" value = {this.state.title} onChange={this.hangleGet} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n         {/* <Button variant=\"outline-info\" onChange={this.getData}>Search</Button> */}\n       </Form>\n       {/* {console.log(this.state.results)} */}\n\n       {re.length===0 && this.putValue(this.state.results)}\n       {/* {console.log(this.state.results)} */}\n       {this.state.results.length>0 &&\n         <Redirect to = {{\n             pathname : '/results',\n         }}/>\n       }\n       {/* {this.state.search='' && <Redirect to = '/'/>} */}\n       {this.state.results=[]}\n     </Navbar>\n     </div>\n  )\n}\n\n\n\nexport function Results(){\n      return(\n        <div>\n          {re.map(Name => <div><li><Link to = {`/${Name}`} >{Name}</Link></li></div>)}\n          {why.length == 0 && \n              <Redirect to = {{\n                pathname : '/home',\n              }}/>\n          }\n          {re=[]}\n          {ok = false}\n        </div>\n      )\n}\n\nexport default connect(null)(Navs);\n// export {Navs,Results};\n"]},"metadata":{},"sourceType":"module"}